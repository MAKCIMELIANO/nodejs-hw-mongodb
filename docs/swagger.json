{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation for Contacts App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-1-qovl.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getContacts",
        "description": "Retrieve all contacts with optional pagination, sorting, and filtering.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "description": "Number of contacts per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "description": "Field to sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "description": "Sort order (asc or desc)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "required": false,
            "description": "Filter by contact type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "required": false,
            "description": "Filter by favourite status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found all contacts!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "example": "+1234567890"
                          },
                          "email": {
                            "type": "string",
                            "example": "john.doe@example.com"
                          },
                          "isFavourite": {
                            "type": "boolean",
                            "example": true
                          },
                          "contactType": {
                            "type": "string",
                            "enum": [
                              "work",
                              "home",
                              "personal"
                            ],
                            "example": "work"
                          },
                          "userId": {
                            "type": "string",
                            "example": "60d0fe4f5311236168a109ca"
                          },
                          "photo": {
                            "type": "string",
                            "example": "[http://example.com/photos/johndoe.jpg"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 20
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 3
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 1
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No contacts found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "No contacts found!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "description": "Create a new contact.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "isFavourite": {
                    "type": "boolean"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created the contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created contact!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "isFavourite": {
                          "type": "boolean",
                          "example": true
                        },
                        "contactType": {
                          "type": "string",
                          "enum": [
                            "work",
                            "home",
                            "personal"
                          ],
                          "example": "work"
                        },
                        "userId": {
                          "type": "string",
                          "example": "123456789012345678901234"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://example.com/photo.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Name, phoneNumber, and contactType are required fields."
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a contact by ID",
        "operationId": "getContactById",
        "description": "Retrieve a single contact by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "ID of the contact to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id {contactId}!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "isFavourite": {
                          "type": "boolean",
                          "example": true
                        },
                        "contactType": {
                          "type": "string",
                          "enum": [
                            "work",
                            "home",
                            "personal"
                          ],
                          "example": "work"
                        },
                        "userId": {
                          "type": "string",
                          "example": "user123"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://example.com/photo.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id {contactId} not found!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact by ID",
        "operationId": "patchContact",
        "description": "Partially update a contact by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "ID of the contact to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "isFavourite": {
                    "type": "boolean"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact with id {contactId}!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "isFavourite": {
                          "type": "boolean",
                          "example": true
                        },
                        "contactType": {
                          "type": "string",
                          "enum": [
                            "work",
                            "home",
                            "personal"
                          ],
                          "example": "work"
                        },
                        "userId": {
                          "type": "string",
                          "example": "123456789012345678901234567890"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://example.com/photo.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id {contactId} not found!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact by ID",
        "operationId": "deleteContact",
        "description": "Delete a contact by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "ID of the contact to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the contact"
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The contact does not exist or has already been deleted."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}